70+ JavaScript Challenges Using Data Structures & Algorithms
(https://www.traversymedia.com/products/70-javascript-challenges-using-data-structures-algorithms)

https://github.com/bradtraversy/traversy-js-challenges
https://github.com/Annie-Huang/traversy-js-challenges

--------------------------------------------------------------------
https://www.w3schools.com/jsref/jsref_regexp_wordchar_non.asp	<--- List all the metacharaers match cases mean.


PS C:\react\traversy-js-challenges> npm install jest --save-dev
PS C:\react\traversy-js-challenges> npm test
PS C:\react\traversy-js-challenges> npm run test C:\react\traversy-js-challenges\04-recursion\02-unwinding\sum-up-to.test
.js
PS C:\react\traversy-js-challenges> node C:\react\traversy-js-challenges\06-hash-tables-maps-sets\11-custom-hash-table\cu
stom-hash-table-run.js
7


Maybe remember stack implementation, because there is usually what got asked in the interview.
The other two is queue and linkList.
